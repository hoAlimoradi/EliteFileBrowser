
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'
// Check dependencies.
// https://github.com/ben-manes/gradle-versions-plugin
apply plugin: 'com.github.ben-manes.versions'

// Detekt - Static code analysis
// https://github.com/arturbosch/detekt
apply from: "../config/quality/detekt/detekt.gradle"

// Fabric
//apply plugin: 'io.fabric'


// Lint, pmd...
apply from: '../config/quality/quality.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.alimoradi.elitefilebrowser"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "fa", "en"
        renderscriptTargetApi rootProject.ext.targetSdkVersion
        renderscriptSupportModeEnabled true
    }

    bundle {
        density.enableSplit = true
        abi.enableSplit = true
        language.enableSplit = false
    }

    signingConfigs {
    }

    buildTypes {
        release {
             minifyEnabled true
            //shrinkResources true
            multiDexEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix ".dev"
            shrinkResources false
            multiDexEnabled true
        }
    }

    sourceSets {
        main {

            // https://medium.com/google-developer-experts/android-project-structure-alternative-way-29ce766682f0#.sjnhetuhb
            res.srcDirs = [
                    'src/main/res/android_q',
                    'src/main/res/bottom_bar',
                    'src/main/res/common',
                    'src/main/res/dialog',
                    'src/main/res/file_column_detail',
                    'src/main/res/file_column_horizontal_lists',
                    'src/main/res/file_column_list',
                    'src/main/res/file_column_row',
                    'src/main/res/file_details',
                    'src/main/res/file_list',
                    'src/main/res/file_list_row',
                    'src/main/res/icon',
                    'src/main/res/main',
                    'src/main/res/note',
                    'src/main/res/notification',
                    'src/main/res/permission',
                    'src/main/res/settings',
                    'src/main/res/settings_android_q',
                    'src/main/res/settings_ram',
                    'src/main/res/settings_storage'
            ]
        }

        // Everything related to connected test live in src/androidTest/core/java
        androidTest.java.srcDir 'src/androidTest/core/java'

        // Instrumented unit tests live in src/androidTest/unit
        androidTest.java.srcDir 'src/androidTest/unit/java'

        // Instrumented integration tests live in src/androidTest/integration
        androidTest.java.srcDir 'src/androidTest/integration/java'

        // Instrumented use cases tests live in src/androidTest/usecases
        androidTest.java.srcDir 'src/androidTest/usecases/java'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

configurations {
    all {
        exclude group: 'org.json', module: 'json'
    }
    // KtLint - Static code analysis
    // https://proandroiddev.com/kotlin-static-analysis-why-and-how-a12042e34a98
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
   // api project(':feature_purchase')
    api project(':file_api_android')
    api project(':file_api_online_android')
    api project(':feature_base64')
    api project(':feature_aes')

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Android - Support
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.cardview:cardview:1.0.0"
    api "androidx.recyclerview:recyclerview:1.1.0"

    implementation 'androidx.viewpager2:viewpager2:1.0.0-beta02'

    // Third party - Network
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp:okhttp-urlconnection:2.7.5"

    // Third party - UI
    api 'com.hannesdorfmann:adapterdelegates4:4.2.0'
    // https://github.com/Dimezis/BlurView
    implementation 'com.eightbitlab:blurview:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    // KtLint - Static code analysis
    // https://proandroiddev.com/kotlin-static-analysis-why-and-how-a12042e34a98
    ktlint "com.github.shyiko:ktlint:0.31.0"

    // Testing-only dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.27.0'

    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation 'org.whispersystems:signal-protocol-android:2.8.1'
    // Add this line for the QR code Scanner
    implementation "com.journeyapps:zxing-android-embedded:3.6.0"
    //implementation 'com.google.zxing:core:3.4.0'

    implementation "androidx.biometric:biometric:1.2.0-alpha04"
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-io:1.3.2'

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.4.0"
    //JetPack
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.3.1'

    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation "androidx.room:room-runtime:2.4.1"
    annotationProcessor "androidx.room:room-compiler:2.4.1"


    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"

    implementation 'com.google.code.gson:gson:2.8.7'


}

// KtLint - Static code analysis
// https://proandroiddev.com/kotlin-static-analysis-why-and-how-a12042e34a98
task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // args "--reporter=checkstyle, output=${buildDir}/ktlint.xml
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'org.jetbrains.kotlin.android'
